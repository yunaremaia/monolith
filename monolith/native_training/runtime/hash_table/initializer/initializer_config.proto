// Copyright 2022 ByteDance and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax="proto2";

package monolith.hash_table;

message ZerosInitializerConfig {
  optional int32 dim_size = 1;
}

message OnesInitializerConfig {
  optional int32 dim_size = 1;
}

message ConstantsInitializerConfig {
  optional int32 dim_size = 1;
  optional float constant = 2;
}

message RandomUniformInitializerConfig {
  optional int32 dim_size = 1;
  optional float minval = 2 [default=-0.05];
  optional float maxval = 3 [default=0.05];
}

message InitializerConfig {
  oneof type {
    ZerosInitializerConfig zeros = 1;
    RandomUniformInitializerConfig random_uniform = 2;
    OnesInitializerConfig ones = 3;

    ConstantsInitializerConfig constants = 15;
  }
}