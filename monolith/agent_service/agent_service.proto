// Copyright 2022 ByteDance and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option cc_enable_arenas = true;

package monolith.serving.agent_service;

enum ServerType {
  PS = 0;
  ENTRY = 1;
  DENSE = 2;
};

message AddressList {
  repeated string address = 1;
}

message GetReplicasRequest {
    ServerType server_type = 1;
    int32 task = 2;
    string model_name = 3;
}

message GetReplicasResponse {
  AddressList address_list = 1;
}

message GetResourceRequest {
}

message GetResourceResponse {
  string address = 1;
  int32 shard_id = 2;
  int32 replica_id = 3;
  int64 memory = 4;
  float cpu = 5;
  float network = 6;
  float work_load = 7;
}


message HeartBeatRequest {
  ServerType server_type = 1;
}


message HeartBeatResponse {
  map<string, AddressList> addresses = 1;
}


service AgentService {
  rpc GetReplicas(GetReplicasRequest) returns (GetReplicasResponse) {}
  rpc GetResource(GetResourceRequest) returns (GetResourceResponse) {}
  rpc HeartBeat(HeartBeatRequest) returns (HeartBeatResponse) {}
}
